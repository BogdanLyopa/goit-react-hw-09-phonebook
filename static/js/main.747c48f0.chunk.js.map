{"version":3,"sources":["Components/UserMenu/AuthNav.js","Components/UserMenu/Navigation.js","Components/UserMenu/UserMenu.js","Components/UserMenu/AppBar.js","Components/UserMenu/PrivateRoute.js","Components/UserMenu/PublicRoute.js","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/contacts/contactsAction.js"],"names":["AuthNav","StyledNavLink","activeClassName","exact","to","styled","NavLink","Navigation","isAuthenticated","useSelector","authSelectors","getIsAuthenticated","UserMenu","name","getUsername","dispatch","useDispatch","UserDiv","Span","LogoutButton","type","onClick","authOperations","logOut","span","button","div","AppBar","isAuntificated","Header","header","PrivateRoute","redirectTo","children","routeProps","PublicRoute","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","getCurrentUser","Container","fallback","path","component","items","createReducer","fetchContactsSuccess","_","payload","addContactSuccess","state","removeContactSuccess","filter","id","loading","addContactRequest","addContactError","removeContactRequest","removeContactError","fetchContactsRequest","fetchContactsError","changedFilter","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","user","authActions","token","axios","defaults","baseURL","headers","common","Authorization","register","credentials","a","post","response","data","message","logIn","getState","persistedToken","get","getError"],"mappings":"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","file":"static/js/main.747c48f0.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nconst AuthNav = () => (\r\n  <div>\r\n    <StyledNavLink activeClassName=\"navLink__active\" exact to=\"/register\">\r\n      Registration\r\n    </StyledNavLink>\r\n    <StyledNavLink activeClassName=\"navLink__active\" exact to=\"/login\">\r\n      Log in\r\n    </StyledNavLink>\r\n  </div>\r\n);\r\nexport default AuthNav;\r\nexport const StyledNavLink = styled(NavLink)`\r\n  position: relative;\r\n  display: inline-block;\r\n\r\n  font-family: 'Itim', cursive;\r\n  color: white;\r\n  text-decoration: none;\r\n  padding-bottom: 30px;\r\n  padding-top: 30px;\r\n  padding-right: 10px;\r\n  padding-left: 10px;\r\n\r\n  &:hover {\r\n    background-color: #3f0e40;\r\n  }\r\n  &.navLink__active::before {\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    content: '';\r\n    width: 100%;\r\n    height: 4px;\r\n    background-color: white;\r\n    border-radius: 2px;\r\n  }\r\n`;\r\n","import { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport { StyledNavLink } from './AuthNav';\r\n\r\nexport default function Navigation() {\r\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <div>\r\n      <StyledNavLink activeClassName=\"navLink__active\" exact to=\"/\">\r\n        Main\r\n      </StyledNavLink>\r\n      {isAuthenticated && (\r\n        <StyledNavLink activeClassName=\"navLink__active\" to=\"/contacts\">\r\n          Contacts\r\n        </StyledNavLink>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport styled from 'styled-components';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nexport default function UserMenu() {\r\n  const name = useSelector(authSelectors.getUsername);\r\n  const dispatch = useDispatch();\r\n  const onLogout = () => dispatch(authOperations.logOut());\r\n  return (\r\n    <UserDiv>\r\n      <Span>Welcome,{name}!</Span>\r\n      <LogoutButton type=\"button\" onClick={onLogout}>\r\n        <ExitToAppIcon /> Logout\r\n      </LogoutButton>\r\n    </UserDiv>\r\n  );\r\n}\r\n\r\nconst Span = styled.span`\r\n  margin-right: 15px;\r\n  font-size: 25px;\r\n`;\r\n\r\nconst LogoutButton = styled.button`\r\n  background-color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  border: none;\r\n  &:hover {\r\n    background-color: silver;\r\n  }\r\n`;\r\n\r\nconst UserDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n","import Navigation from './Navigation';\r\nimport UserMEnu from './UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport styled from 'styled-components';\r\n\r\nexport default function AppBar() {\r\n  const isAuntificated = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <Header>\r\n      <Navigation />\r\n      {isAuntificated ? <UserMEnu /> : <AuthNav />}\r\n    </Header>\r\n  );\r\n}\r\n\r\nconst Header = styled.header`\r\n  padding-right: 10px;\r\n\r\n  display: flex;\r\n  position: relative;\r\n  justify-content: space-between;\r\n  background-color: #350d36;\r\n  font-family: 'Itim', cursive;\r\n  color: white;\r\n  border-bottom: 1px solid rgb(82, 38, 83);\r\n`;\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nexport default function PrivateRoute({ redirectTo, children, ...routeProps }) {\r\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isAuthenticated ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nexport default function PublicRoute({ redirectTo, children, ...routeProps }) {\r\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        children\r\n      )}\r\n    </Route>\r\n  );\r\n}\r\n","import React, { Suspense, lazy, useEffect } from 'react';\nimport AppBar from './Components/UserMenu/AppBar';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './styles.css';\nimport { Switch, Route } from 'react-router-dom';\nimport { authOperations } from './redux/auth';\nimport { useDispatch } from 'react-redux';\nimport PrivateRoute from './Components/UserMenu/PrivateRoute';\nimport PublicRoute from './Components/UserMenu/PublicRoute';\nimport styled from 'styled-components';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Container>\n        <AppBar />\n\n        <Suspense fallback={<p>Loading...</p>}>\n          <Switch>\n            <Route exact path=\"/\" component={HomeView} />\n            <PublicRoute path=\"/register\" restricted redirectTo=\"/contacts\">\n              <RegisterView />\n            </PublicRoute>\n            <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\n              <LoginView />\n            </PublicRoute>\n            <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n              <ContactsView />\n            </PrivateRoute>\n          </Switch>\n        </Suspense>\n      </Container>\n    </>\n  );\n}\n\nexport const Container = styled.div`\n  max-width: 1220px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  changedFilter,\r\n} from './contactsAction';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [removeContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [removeContactRequest]: () => true,\r\n  [removeContactSuccess]: () => false,\r\n  [removeContactError]: () => false,\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changedFilter]: (_, { payload }) => payload,\r\n});\r\nconst error = createReducer(null, {\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [removeContactError]: (_, { payload }) => payload,\r\n});\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contactsReducer';\r\nimport { authReducer } from './auth';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\n\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={<p>Loading...</p>} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({ user, isAuthenticated, token, error });\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\nimport { authSelectors } from '.';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n    token.set(response.data.token);\r\n\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { register, logIn, logOut, getCurrentUser };\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\nconst getError = state => state.auth.error;\r\n\r\nexport default { getIsAuthenticated, getUsername, getError };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const removeContactRequest = createAction(\r\n  'contacts/removeContactRequest',\r\n);\r\nexport const removeContactSuccess = createAction(\r\n  'contacts/removeContactSuccess',\r\n);\r\nexport const removeContactError = createAction('contacts/removeContactError');\r\n\r\nexport const changedFilter = createAction('contacts/filterChanged');\r\n"],"sourceRoot":""}